{"version":3,"sources":["webpack://_N_E/./pages/images.tsx","webpack://_N_E/?665c"],"names":["ListItem","image","index","className","src","width","height","fakeFetch","delay","Promise","res","setTimeout","useState","itemCount","isLoading","state","setState","target","setTarget","useEffect","fetchItems","console","log","prev","imageList","observer","IntersectionObserver","onIntersect","threshold","observe","disconnect","entry","isIntersecting","unobserve","Array","map","_","i","ref","window","__NEXT_P","push"],"mappings":"gwBACA,IAAMA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACb,gBAAKC,UAAU,WAAWC,IAAKH,EAAmBI,MAAM,MAAMC,OAAO,OAA1BJ,IAGzCK,EAAY,eAACC,EAAD,uDAAS,IAAT,OAAkB,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,OAgEvE,UA9De,WAAM,OAEQI,cAAS,CAACC,UAAU,EAAEC,WAAU,IAAlDC,EAFU,KAEJC,EAFI,QAGUJ,cAAS,MAA7BK,EAHU,KAGHC,EAHG,MAKjBC,gBAAU,WACNC,MACD,IACH,IAAMA,EAAU,mCAAG,qFACfC,QAAQC,IAAI,WAAWP,EAAMF,WAC7BG,GAAS,SAAAO,GAAI,cAAUA,GAAV,IAAgBT,WAAW,OAFzB,SAGTP,IAHS,OAIfS,GAAS,SAAAO,GAAI,MAAK,CAChBV,UAAWU,EAAKV,UAAY,EAC5BC,WAAW,MAEbO,QAAQC,IAAI,WAAWP,EAAMF,WARd,2CAAH,qDAUVW,EACF,CACI,8EACA,6EACA,wEACA,wEAERL,gBAAU,WACN,IAAIM,EAMN,OALMR,IACAI,QAAQC,IAAI,cAAcL,IAC1BQ,EAAW,IAAIC,qBAAqBC,EAAa,CAAEC,UAAW,MACrDC,QAAQZ,IAEhB,kBAAMQ,GAAYA,EAASK,gBACjC,CAACb,IAGJ,IAAMU,EAAW,mCAAG,aAAgBF,GAAhB,6FAAQM,EAAR,MACNC,eADM,uBAEZX,QAAQC,IAAI,UACZG,EAASQ,UAAUF,EAAMd,QAHb,SAING,IAJM,OAKZK,EAASI,QAAQE,EAAMd,QALX,2CAAH,wDAQTJ,EAAyBE,EAAzBF,UAAyBE,EAAdD,UACnB,OACI,0CACU,kBADV,mDAE+B,mBAC1B,OAAIoB,MAAMrB,IAAYsB,KAAI,SAACC,EAAGC,GAC3B,OACI,gCACKA,EAAI,GAAK,IAAK,mBACf,SAACrC,EAAD,CAAUC,MAAOuB,EAAUa,EAAE,GAAInC,MAAOmC,GAAQA,UAI5D,gBAAKC,IAAKpB,S,sBC/DjBqB,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,W","file":"static/chunks/pages/images-24f7a48f2d702b73ac77.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nconst ListItem = ({ image, index }) => (\n    <img className=\"ListItem\" src={image} key={index} width=\"200\" height=\"200\"/>\n);\n\nconst fakeFetch = (delay = 1000) => new Promise(res => setTimeout(res, delay));\n\nconst images = () => {\n\n    const [state,setState] = useState({itemCount:0,isLoading:false})\n    const [target,setTarget] = useState(null)\n    \n    useEffect(() => {\n        fetchItems();\n    }, []);\n    const fetchItems = async () => {\n        console.log('count ? ',state.itemCount)\n        setState(prev => ({ ...prev, isLoading: true }));\n        await fakeFetch();\n        setState(prev => ({\n          itemCount: prev.itemCount + 3,\n          isLoading: false\n        }));\n        console.log('count ? ',state.itemCount)\n      };\n    const imageList = \n        [\n            'https://cdn.pixabay.com/photo/2016/11/18/17/20/living-room-1835923_1280.jpg',\n            'https://cdn.pixabay.com/photo/2014/12/27/14/37/living-room-581073__340.jpg',\n            'https://cdn.pixabay.com/photo/2016/06/24/10/47/house-1477041__340.jpg',\n            'https://cdn.pixabay.com/photo/2015/04/10/17/03/pots-716579__340.jpg',\n        ]\n    useEffect(() => {\n        let observer;\n        if (target) {\n            console.log(\"taget is...\",target)\n            observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n            observer.observe(target);\n        }\n      return () => observer && observer.disconnect();\n    }, [target]);\n    \n\t/* 인터섹션 callback */\n    const onIntersect = async ([entry], observer) => {\n        if (entry.isIntersecting) {\n            console.log(\"111111\")\n            observer.unobserve(entry.target);\n            await fetchItems();\n            observer.observe(entry.target);\n        }\n    };\n    const { itemCount, isLoading } = state;\n    return (\n        <>\n            images<br/>\n            IntersectionObserver 로 해보자.<br/>\n            {[...Array(itemCount)].map((_, i) => {\n                return (\n                    <>  \n                        {i % 3 == 0 && <br/>}\n                        <ListItem image={imageList[i%3]} index={i} key={i} />\n                    </>\n                    )\n            })}\n            <div ref={setTarget} />\n        </>\n    )\n}\n\nexport default images","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/images\",\n      function () {\n        return require(\"private-next-pages/images.tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}